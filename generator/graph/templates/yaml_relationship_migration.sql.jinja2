-- yaml_relationship_migration.cypher.sql.jinja2
-- Get records to create {{ relationship.type }} relationships from {{ table_name }}
SELECT 
  t.*,
  {% for column_name, column in relationship.identifiers.items() %}
  {{ column.table_name }}.{{ column.sql_column_name }},
  {{ column.table_name }}.{{ column.reference_description_column }}{{ ',' if not loop.last else '' }}
  {% endfor %}
FROM {{ table_name }} t
  {% for column_name, column in relationship.identifiers.items() %}
  JOIN {{ column.table_name }} ON t.{{ column.hash_fk_sql_column_name }} = {{ column.table_name }}.id
  {% endfor %}
WHERE t.{{ relationship.source_fk }} IS NOT NULL
  AND t.{{ relationship.target_fk }} IS NOT NULL
  {% if 'value' in relationship.properties %}
  AND t.value > 0
  AND t.value != 'NaN'
  AND t.value IS NOT NULL
  {% endif %}
  {% for filter in relationship.filters %}
    {% if filter['min_value'] %}
  AND t.{{ filter['field'] }} >= {{ filter['min_value'] }}
    {% endif %}
  {% endfor %}
  {% for column_name, column in relationship.identifiers.items() %}
    {% for filter in relationship.filters %}
      {% if filter['field'] == column.sql_column_name %}
        {% if filter['values'] %}
  AND {{ column.table_name }}.{{ column.sql_column_name }} IN ({{ filter['values'] | join(', ') }})
        {% endif %}
      {% endif %}
    {% endfor %}
  {% endfor %}
ORDER BY t.id
LIMIT :limit OFFSET :offset